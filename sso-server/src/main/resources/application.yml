# 服务器配置
server:
  port: 8081
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
      force: true

# Spring 配置
spring:
  # 应用名称
  application:
    name: sso-server

  # 数据源配置
  datasource:
    url: jdbc:mysql://localhost:3306/sso_db?useSSL=false&serverTimezone=UTC&characterEncoding=utf8&allowPublicKeyRetrieval=true
    username: root
    password: xmy5201314
    driver-class-name: com.mysql.cj.jdbc.Driver
    # 连接池配置
    hikari:
      minimum-idle: 5
      maximum-pool-size: 20
      auto-commit: true
      idle-timeout: 30000
      pool-name: DatebookHikariCP
      max-lifetime: 1800000
      connection-timeout: 30000
      connection-test-query: SELECT 1

  # Redis配置 （SSO模式一和模式二使用Redis来同步会话）
  redis:
    # Redis数据库索引（默认为0）
    database: 1
    # Redis服务器地址
    host: 127.0.0.1
    # Redis服务器连接端口
    port: 6379
    # Redis服务器连接密码（默认为空）
    password:
    # 连接超时时间
    timeout: 10000ms
    # 连接池配置
    lettuce:
      pool:
        max-active: 8
        max-wait: -1ms
        max-idle: 8
        min-idle: 0

# MyBatis 配置
mybatis:
  # 指定 mapper.xml 文件位置
  mapper-locations: classpath:mapper/*.xml
  # 指定实体类包路径
  type-aliases-package: org.example.common.entity
  configuration:
    # 开启驼峰命名转换
    map-underscore-to-camel-case: true
    # 开启二级缓存
    cache-enabled: true
    # 打印SQL语句
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

# Sa-Token 配置 - 增强安全性版本
sa-token:
  # token 名称（同时也是 cookie 名称）
  token-name: satoken
  # token 有效期（单位：秒） 2小时，提高安全性
  timeout: 7200
  # token 最低活跃频率（单位：秒），30分钟无操作过期
  active-timeout: 1800
  # 是否允许同一账号多地同时登录 （为 true 时允许一起登录, 为 false 时新登录挤掉旧登录）
  is-concurrent: true
  # 在多人登录同一账号时，是否共用一个 token （为 true 时共用token，确保会话一致性）
  is-share: true
  # token 风格（使用更安全的随机字符串）
  token-style: random-128
  # 是否输出操作日志
  is-log: true
  # Token 存储方式配置（使用Redis存储，重启后不丢失）
  dao-type: redis
  # 启用JWT混合模式（提高性能和安全性）
  jwt-secret-key: "your-jwt-secret-key-change-in-production"
  # 是否在每次请求后刷新token活跃时间
  is-read-head: true
  # 是否在每次请求后刷新token过期时间
  is-read-cookie: true

# Refresh Token 配置
refresh-token:
  # Refresh Token有效期（天）
  expire-days: 7
  # 是否启用Refresh Token自动续期
  auto-renewal: true
  # 续期阈值（在Refresh Token过期前多少天自动续期）
  renewal-threshold-days: 1
  # 是否启用设备指纹验证
  device-fingerprint-check: true

  # CORS 跨域配置
  cors:
    # 是否开启跨域
    is-open: true
    # 允许的域名（生产环境应限制具体域名）
    allow-origin: "http://localhost:5137,http://localhost:5173,http://localhost:8082"
    # 允许的请求方法
    allow-methods: "GET,POST,PUT,DELETE,OPTIONS"
    # 允许的请求头
    allow-headers: "satoken,Content-Type,Authorization,X-Requested-With"

  # SSO-Server 配置
  sso-server:
    # Ticket有效期 (单位: 秒)，默认五分钟
    ticket-timeout: 300
    # 所有允许的授权回调地址
    allow-url: "*"
    # 是否打开单点注销功能
    is-slo: true
    # 接口调用秘钥
    secretkey: kQwIOrYvnXsVDhwOh2tPzI9at3cKs6VuOqQyHEz0c1Q
    # 应用列表：配置接入的应用信息
    clients:
      # 应用 sso-client1：采用模式一对接 (同域、同Redis)
      sso-client1:
        client: sso-client1
        allow-url: "*"
      # 应用 sso-client2：采用模式二对接 (跨域、同Redis)
      sso-client2:
        client: sso-client2
        allow-url: "*"
        secret-key: SSO-C2-kQwIOrYvnXmSDkwEiFngrKidMcdrgKor
      # 应用 sso-client3：采用模式三对接 (跨域、跨Redis)
      sso-client3:
        # 应用名称
        client: sso-client3
        # 允许授权地址
        allow-url: "*"
        # 是否接收消息推送
        is-push: true
        # 消息推送地址
        push-url: http://localhost:8082/sso/pushC
        # 接口调用秘钥 (如果不配置则使用全局默认秘钥)
        secret-key: SSO-C3-kQwIOrYvnXmSDkwEiFngrKidMcdrgKor

# 日志配置
logging:
  level:
    root: INFO
    org.example.ssoserver: DEBUG
    org.springframework.security: DEBUG
    org.apache.ibatis: DEBUG
    cn.dev33.satoken: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/sso-server.log
    max-size: 10MB
    max-history: 30

# 管理端点配置
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,env
  endpoint:
    health:
      show-details: when-authorized

# 自定义配置
app:
  # JWT 配置
  jwt:
    secret: mySecretKey123456789012345678901234567890
    expiration: 86400 # 24小时

  # 文件上传配置
  upload:
    path: /uploads/
    max-file-size: 10MB
    max-request-size: 50MB

  # 系统配置
  system:
    name: SSO认证中心
    version: 1.0.0
    description: 基于Sa-Token的单点登录系统
